{"version":3,"sources":["webpack:///./src/pages/author/dan-abramov/index.js","webpack:///./src/components/post-card.js"],"names":["Index","data","tagHeader","allMarkdownRemark","totalCount","title","className","style","fontSize","textAlign","marginBottom","edges","map","node","key","id","PostCard","role","to","frontmatter","author","name","width","height","alt","fields","slug","excerpt","dateTime","date","tags","tagName","index"],"mappings":"2FAAA,oEAkCeA,UA1BD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAETC,EAAS,oBADQD,EAAKE,kBAApBC,WACO,OACf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,iBACX,yBAAKC,UAAU,aACb,wBAAIA,UAAU,sBAAsBC,MAAO,CAAEC,SAAU,GAAIC,UAAW,SAAUC,aAAc,KAAOR,GACrG,yBAAKI,UAAU,iDACZL,EAAKE,kBAAkBQ,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,IAAD,CAAUC,IAAKD,EAAKE,GAAIF,KAAMA,Y,wGC8B3BG,IA3CE,SAAC,GAAc,IAAZH,EAAW,EAAXA,KAClB,OACE,yBAAKP,UAAU,4BACb,6BAASA,UAAU,iBACjB,gCACE,yBAAKA,UAAU,wBACb,4BAAQW,KAAK,eAAeX,UAAU,aACpC,kBAAC,OAAD,CAAMY,GAAE,WAAa,IAAYL,EAAKM,YAAYC,QAAWd,UAAU,kBACrE,yBAAKA,UAAU,qBACb,kBAAC,IAAD,CAAOe,KAAI,GAAK,IAAYR,EAAKM,YAAYC,QACtCd,UAAU,kBACVgB,MAAM,MAAMC,OAAO,MAAMC,IAAKX,EAAKM,YAAYC,aAK9D,0BAAMd,UAAU,8BACd,kBAAC,OAAD,CAAMY,GAAE,WAAa,IAAYL,EAAKM,YAAYC,QAAWd,UAAU,6BAA6BO,EAAKM,YAAYC,UAIzH,wBAAId,UAAU,wBACZ,kBAAC,OAAD,CAAMY,GAAIL,EAAKY,OAAOC,MAAOb,EAAKM,YAAYd,QAEhD,yBAAKC,UAAU,0BACb,uBAAGA,UAAU,yBAAyBO,EAAKc,UAE7C,yBAAKrB,UAAU,8CACb,2BACE,0BAAMsB,SAAS,aAAatB,UAAU,uBAAuBO,EAAKM,YAAYU,MAC9E,wBAAIvB,UAAU,oBAAd,SAEEO,EAAKM,YAAYW,KAAKlB,KAAI,SAACmB,EAASC,GAAV,OACxB,kBAAC,OAAD,CAAM1B,UAAU,yBAAyBQ,IAAKkB,EAAOd,GAAE,SAAW,IAAYa,GAAvB,KAAqCA","file":"component---src-pages-author-dan-abramov-index-js-082318452fd33a7606c5.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n// Components\nimport { graphql } from \"gatsby\"\nimport Layout from \"../../../components/layout\"\nimport SEO from \"../../../components/seo\"\nimport PostCard from '../../../components/post-card'\n\nconst Index = ({ data }) => {\n  const { totalCount } = data.allMarkdownRemark\n  const tagHeader = `作者 Dan Abramov 有 ${totalCount} 篇文章`\n  return (\n    <Layout>\n      <SEO title=\"Dan Abramov \" />\n      <div className=\"container\">\n        <h1 className=\"tag-info light-grey\" style={{ fontSize: 12, textAlign: \"center\", marginBottom: 16 }}>{tagHeader}</h1>\n        <div className=\"f-article-highlights article--grid__container\">\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <PostCard key={node.id} node={node} />\n          ))}\n        </div>\n      </div>\n    </Layout>\n  )\n}\nIndex.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.array.isRequired,\n    }),\n  }),\n}\n\nexport default Index\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { author: { eq: \"Dan Abramov\" } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n            author\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport _ from 'lodash';\nimport Image from './image'\n\nconst PostCard = ({ node }) => {\n  return (\n    <div className=\"post-card f-article-item\">\n      <article className=\"article--post\">\n        <header>\n          <div className=\"article--post__image\">\n            <figure role=\"presentation\" className=\"bio-image\">\n              <Link to={`/author/${_.kebabCase(node.frontmatter.author)}`} className=\"bio-image-link\">\n                <div className=\"bio-image-wrapper\">\n                  <Image name={`${_.kebabCase(node.frontmatter.author)}`}\n                         className=\"bio-image-image\"\n                         width=\"100\" height=\"100\" alt={node.frontmatter.author} />\n                </div>\n              </Link>\n            </figure>\n          </div>\n          <span className=\"article--post__author-name\">\n            <Link to={`/author/${_.kebabCase(node.frontmatter.author)}`} className=\"author-post__author-title\">{node.frontmatter.author}</Link>\n            {/*<em className=\"light-grey\"> 写了 </em>*/}\n          </span>\n        </header>\n        <h1 className=\"article--post__title\">\n          <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n        </h1>\n        <div className=\"article--post__content\">\n          <p className=\"article--post__teaser\">{node.excerpt}</p>\n        </div>\n        <div className=\"article--post__content article--post__meta\">\n          <p>\n            <time dateTime=\"2021-05-11\" className=\"article--post__time\">{node.frontmatter.date}</time>\n            <em className=\"light-grey small\"> 收录于 </em>\n            {\n              node.frontmatter.tags.map((tagName, index) => (\n                <Link className=\"author-post__tag  mija\" key={index} to={`/tags/${_.kebabCase(tagName)}/`}>{tagName}</Link>\n              ))\n            }\n          </p>\n        </div>\n      </article>\n    </div>\n  );\n}\n\nexport default PostCard\n"],"sourceRoot":""}