{"version":3,"sources":["webpack:///./src/images/dan-abramov.jpg","webpack:///./src/templates/tags.js","webpack:///./src/components/post-card.js"],"names":["module","exports","Tags","pageContext","data","tag","tagHeader","allMarkdownRemark","totalCount","defKey","title","className","style","fontSize","textAlign","marginBottom","edges","map","node","key","id","PostCard","role","to","src","profileImage","width","height","alt","fields","slug","frontmatter","excerpt","dateTime","date","tags","tagName","index"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,2D,kCCA3C,oEAsCeC,UA9BF,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KACnBC,EAAQF,EAARE,IAEFC,EAAS,KADQF,EAAKG,kBAApBC,WACO,YAA8BH,EAA9B,IACf,OACE,kBAAC,IAAD,CAAQI,OAAQJ,GACd,kBAAC,IAAD,CAAKK,MAAOL,IACZ,yBAAKM,UAAU,aACb,wBAAIA,UAAU,sBAAsBC,MAAO,CAAEC,SAAU,GAAIC,UAAW,SAAUC,aAAc,KAAOT,GACrG,yBAAKK,UAAU,iDACZP,EAAKG,kBAAkBS,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAChC,kBAAC,IAAD,CAAUC,IAAKD,EAAKE,GAAIF,KAAMA,Y,iHC+B3BG,IA7CE,SAAC,GAAc,IAAZH,EAAW,EAAXA,KAClB,OACE,yBAAKP,UAAU,4BACb,6BAASA,UAAU,iBACjB,gCACE,yBAAKA,UAAU,wBACb,4BAAQW,KAAK,eAAeX,UAAU,aACpC,kBAAC,OAAD,CAAMY,GAAE,sBAAyBZ,UAAU,kBACzC,yBAAKA,UAAU,qBACb,iCACE,yBAAKA,UAAU,kBACVa,IAAKC,IACLC,MAAM,MAAMC,OAAO,MAAMC,IAAI,qBAM5C,0BAAMjB,UAAU,8BACd,kBAAC,OAAD,CAAMY,GAAE,sBAAyBZ,UAAU,6BAA3C,eACA,wBAAIA,UAAU,cAAd,aAGJ,wBAAIA,UAAU,wBACZ,kBAAC,OAAD,CAAMY,GAAIL,EAAKW,OAAOC,MAAOZ,EAAKa,YAAYrB,QAEhD,yBAAKC,UAAU,0BACb,uBAAGA,UAAU,yBAAyBO,EAAKc,UAE7C,yBAAKrB,UAAU,8CACb,2BACE,0BAAMsB,SAAS,aAAatB,UAAU,uBAAuBO,EAAKa,YAAYG,MAC9E,wBAAIvB,UAAU,oBAAd,SAEEO,EAAKa,YAAYI,KAAKlB,KAAI,SAACmB,EAASC,GAAV,OACxB,kBAAC,OAAD,CAAM1B,UAAU,yBAAyBQ,IAAKkB,EAAOd,GAAE,SAAW,IAAYa,GAAvB,KAAqCA","file":"component---src-templates-tags-js-7612c7e6b10474efba59.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/dan-abramov-c715447ce38098828758e525a1128b87.jpg\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\n// Components\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostCard from '../components/post-card'\n\nconst Tags = ({ pageContext, data }) => {\n  const { tag } = pageContext\n  const { totalCount } = data.allMarkdownRemark\n  const tagHeader = `有 ${totalCount} 篇文章收录于 \"${tag}\"`\n  return (\n    <Layout defKey={tag}>\n      <SEO title={tag} />\n      <div className=\"container\">\n        <h1 className=\"tag-info light-grey\" style={{ fontSize: 12, textAlign: \"center\", marginBottom: 16 }}>{tagHeader}</h1>\n        <div className=\"f-article-highlights article--grid__container\">\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <PostCard key={node.id} node={node} />\n          ))}\n        </div>\n      </div>\n    </Layout>\n  )\n}\nTags.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }),\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.array.isRequired,\n    }),\n  }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            tags\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport _ from 'lodash';\nimport profileImage from '../images/dan-abramov.jpg';\n\nconst PostCard = ({ node }) => {\n  return (\n    <div className=\"post-card f-article-item\">\n      <article className=\"article--post\">\n        <header>\n          <div className=\"article--post__image\">\n            <figure role=\"presentation\" className=\"bio-image\">\n              <Link to={`/author/dan-abramov`} className=\"bio-image-link\">\n                <div className=\"bio-image-wrapper\">\n                  <picture>\n                    <img className=\"bio-image-image\"\n                         src={profileImage}\n                         width=\"100\" height=\"100\" alt=\"Dan Abramov\" />\n                  </picture>\n                </div>\n              </Link>\n            </figure>\n          </div>\n          <span className=\"article--post__author-name\">\n            <Link to={`/author/dan-abramov`} className=\"author-post__author-title\">Dan Abramov</Link>\n            <em className=\"light-grey\"> write </em>\n          </span>\n        </header>\n        <h1 className=\"article--post__title\">\n          <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n        </h1>\n        <div className=\"article--post__content\">\n          <p className=\"article--post__teaser\">{node.excerpt}</p>\n        </div>\n        <div className=\"article--post__content article--post__meta\">\n          <p>\n            <time dateTime=\"2021-05-11\" className=\"article--post__time\">{node.frontmatter.date}</time>\n            <em className=\"light-grey small\"> 收录于 </em>\n            {\n              node.frontmatter.tags.map((tagName, index) => (\n                <Link className=\"author-post__tag  mija\" key={index} to={`/tags/${_.kebabCase(tagName)}/`}>{tagName}</Link>\n              ))\n            }\n          </p>\n        </div>\n      </article>\n    </div>\n  );\n}\n\nexport default PostCard\n"],"sourceRoot":""}